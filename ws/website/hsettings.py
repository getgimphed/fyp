"""
Django settings for website project.
​
Generated by 'django-admin startproject' using Django 1.9.2.
​
For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/
​
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'dty4=i*-102e%cqa-zq*7)@sh_qa2+vm6ml3&2ou69b==do^9f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'rest_framework',
    'oauth2_provider',
    'corsheaders',
    # 'redis',
    # 'social.apps.django_app.default',
    # 'rest_framework.authtoken',  # added for fb and gmail
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
   'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
       'rest_framework.authentication.TokenAuthentication',
   ),
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
    'PAGE_SIZE': 10,
    'EXCEPTION_HANDLER': 'api.utils.custom_exception_handler',
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer',
    )
}

AUTHENTICATION_BACKENDS = (
    # 'social.backends.facebook.FacebookOAuth2',
    # 'social.backends.google.GoogleOAuth2',
    # 'social.backends.twitter.TwitterOAuth',
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend',
)

# LOGIN_REDIRECT_URL = '/logged'
# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/logged/'
# SOCIAL_AUTH_LOGIN_ERROR_URL = '/passNmob/'

# SOCIAL_AUTH_FACEBOOK_KEY = '1743669855890779'
# SOCIAL_AUTH_FACEBOOK_SECRET = '6d8b8516bf16f7769e82487aa48d3896'
# SOCIAL_AUTH_FACEBOOK_SCOPE = ['public_profile','email','user_friends',]

# SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {'fields': 'id, name, email'}

# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
# SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
#     'https://www.googleapis.com/auth/plus.login'
# ]

# SOCIAL_AUTH_ENABLED_BACKENDS = ('facebook',)
# SOCIAL_AUTH_DEFAULT_USERNAME = 'new_social_auth_user'

# SOCIAL_AUTH_PIPELINE = (
#     'social.pipeline.social_auth.social_details',
#     'social.pipeline.social_auth.social_uid',
#     'social.pipeline.social_auth.auth_allowed',
#     'social.pipeline.social_auth.social_user',
#     'social.pipeline.user.get_username',
#     'social.pipeline.social_auth.associate_user',
#     'social.pipeline.social_auth.load_extra_data',
#     'social.pipeline.user.user_details',
#     'api.pipeline.createUser',
#     )

MIDDLEWARE_CLASSES = [
    'django.middleware.cache.UpdateCacheMiddleware',    # This must be first on the list
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'api.views.DisableCSRF',    
    'api.views.LogoutMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware', # This must be last

]

ROOT_URLCONF = 'website.urls'
CORS_ORIGIN_ALLOW_ALL = True
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #for Gmail and FB
                # 'social.apps.django_app.context_processors.backends',
                # 'social.apps.django_app.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'

# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

import dj_database_url
# DATABASES['default'] = dj_database_url.config() 

DATABASES = {}
DATABASES['default'] =  dj_database_url.config(default='postgres://hssuccmbtijntv:_3nBo6_b8k384aOGpprcwfpPsj@ec2-54-243-204-86.compute-1.amazonaws.com:5432/d1pjla6f96om0v',)
DATABASES['default']['ENGINE'] = 'django.db.backends.postgresql_psycopg2'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https',)

# CACHES = {
#     'default': {
#         'BACKEND' : 'redis_cache.RedisCache',
#         'LOCATION': 'localhost:6379',
#         'TIMEOUT' : '600',
#         'OPTIONS' :{
#             'MAX_ENTRIES': 1000
#         }
#     },
# }

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'api.Customer'
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles/')
STATIC_URL = '/static/'
PROJECT_DIR = os.path.join(PROJECT_ROOT,'../')
STATICFILES_DIRS = (
  os.path.join(PROJECT_DIR, 'static/'), 
)

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage' 
